{"name": "Проверка ручки создания курьера - негативная, создание курьера с существующим именем", "status": "failed", "statusDetails": {"message": "AssertionError: Код ответа - \"409\", текст ответа - \"Этот логин уже используется. Попробуйте другой.\"\nassert (409 == 409 and 'Этот логин уже используется' == 'Этот логин у...буйте другой.'\n +  where 409 = <Response [409]>.status_code\n  \n  - Этот логин уже используется. Попробуйте другой.\n  + Этот логин уже используется)", "trace": "self = <tests.courier.test_courier_create.TestCourierCreate object at 0x000001CBBF5FEDC0>\npayload_for_test_courier_create = {'firstName': 'rcywlabrqa1', 'login': 'ncaxgwsvqv1', 'password': 'bhvjeokwcg1'}\n\n    @allure.title('Проверка ручки создания курьера - негативная, создание курьера с существующим именем')\n    @allure.description('Проверяем, что нельзя создать двух одинаковых курьеров, и что при этом возвращается ошибка, '\n                        'возвращаются правильные код и текст ответа')\n    def test_courier_create_same_data(self, payload_for_test_courier_create):\n        requests.post('https://qa-scooter.praktikum-services.ru/api/v1/courier',\n                      data=payload_for_test_courier_create)\n        response = requests.post('https://qa-scooter.praktikum-services.ru/api/v1/courier',\n                                 data=payload_for_test_courier_create)\n    \n>       assert (409 == response.status_code and\n                'Этот логин уже используется' == response.json()[\"message\"]), \\\n            f'Код ответа - \"{response.status_code}\", текст ответа - \"{response.json()[\"message\"]}\"'\nE       AssertionError: Код ответа - \"409\", текст ответа - \"Этот логин уже используется. Попробуйте другой.\"\nE       assert (409 == 409 and 'Этот логин уже используется' == 'Этот логин у...буйте другой.'\nE        +  where 409 = <Response [409]>.status_code\nE         \nE         - Этот логин уже используется. Попробуйте другой.\nE         + Этот логин уже используется)\n\ntests\\courier\\test_courier_create.py:31: AssertionError"}, "description": "Проверяем, что нельзя создать двух одинаковых курьеров, и что при этом возвращается ошибка, возвращаются правильные код и текст ответа", "start": 1713028148014, "stop": 1713028148502, "uuid": "9f6073bb-23ac-4ba0-9c57-f466ca0cfa4f", "historyId": "8e72de3bc032382f802004e9f73390d4", "testCaseId": "8e72de3bc032382f802004e9f73390d4", "fullName": "tests.courier.test_courier_create.TestCourierCreate#test_courier_create_same_data", "labels": [{"name": "parentSuite", "value": "tests.courier"}, {"name": "suite", "value": "test_courier_create"}, {"name": "subSuite", "value": "TestCourierCreate"}, {"name": "host", "value": "DAPIA-UB"}, {"name": "thread", "value": "14876-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.courier.test_courier_create"}]}